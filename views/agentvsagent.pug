//- views/agentvsagent.pug
extends layout

block content
  .container.mt-4
    h1.mb-4 Agent vs Agent Game Results

    // Performance Comparison Card
    .card.mb-4
      .card-header
        h5.card-title.mb-0 Performance Comparison
      .card-body
        .row
          .col-md-4
            h6.text-center Single-Threaded
            p.text-center.mb-0
              | Execution Time: 
              span.fw-bold #{stats.singleThread.performance.totalExecutionTime}ms
            p.text-center
              | Memory Used: 
              span.fw-bold #{(stats.singleThread.performance.memoryUsed.heapUsed / 1024 / 1024).toFixed(2)}MB
          .col-md-4
            h6.text-center Multi-Threaded
            p.text-center.mb-0
              | Execution Time: 
              span.fw-bold #{stats.multiThread.performance.totalExecutionTime}ms
            p.text-center
              | Memory Used: 
              span.fw-bold #{(stats.multiThread.performance.memoryUsed.heapUsed / 1024 / 1024).toFixed(2)}MB
          .col-md-4
            h6.text-center Comparison
            p.text-center.mb-0
              | Speedup: 
              span.fw-bold #{stats.comparison.speedup}x
            p.text-center
              | Memory Overhead: 
              span.fw-bold #{(stats.comparison.memoryDiff.heapUsed / 1024 / 1024).toFixed(2)}MB

    .row
      // Single-Thread Results
      .col-md-6.mb-4
        .card
          .card-header
            h5.card-title.mb-0 Single-Thread Performance
          .card-body
            ul.list-unstyled
              li.mb-2
                strong Avg Round Time: 
                span.ms-2 #{stats.singleThread.performance.avgRoundTime}ms
              li.mb-2
                strong Rounds/Second: 
                span.ms-2 #{stats.singleThread.performance.roundsPerSecond}

      // Multi-Thread Results
      .col-md-6.mb-4
        .card
          .card-header
            h5.card-title.mb-0 Multi-Thread Performance
          .card-body
            ul.list-unstyled
              li.mb-2
                strong Avg Round Time: 
                span.ms-2 #{stats.multiThread.performance.avgRoundTime}ms
              li.mb-2
                strong Rounds/Second: 
                span.ms-2 #{stats.multiThread.performance.roundsPerSecond}

    // Execution Time Comparison Chart
    .card.mb-4
      .card-header
        h5.card-title.mb-0 Round Execution Times Comparison
      .card-body
        .chart-container(style='position: relative; height:400px;')
          canvas#comparisonChart

  scripts
    script(src='https://cdn.jsdelivr.net/npm/chart.js')
    script.
      const ctx = document.getElementById('comparisonChart').getContext('2d');
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: !{JSON.stringify(stats.singleThread.rounds.map(r => r.roundNumber))},
          datasets: [
            {
              label: 'Single-Thread',
              data: !{JSON.stringify(stats.singleThread.rounds.map(r => r.executionTime))},
              borderColor: '#dc3545',
              backgroundColor: 'rgba(220, 53, 69, 0.1)',
              tension: 0.1
            },
            {
              label: 'Multi-Thread',
              data: !{JSON.stringify(stats.multiThread.rounds.map(r => r.executionTime))},
              borderColor: '#0d6efd',
              backgroundColor: 'rgba(13, 110, 253, 0.1)',
              tension: 0.1
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'top',
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Execution Time (ms)'
              }
            }
          }
        }
      });